<?php
define('FLAT_GALLERY_DEFAULT_PAGINATION_LIMIT', 10);
module_load_include('inc', 'islandora', 'includes/authtokens');
module_load_include('inc', 'islandora', 'includes/solution_packs');
/**
 * FLAT gallery
 *
 * @param AbstractObject $object
 * @param string|null    $id
 *
 * @return string
 */
function flat_gallery($object, $id = null) {

    module_load_include('inc', 'flat_gallery', 'includes/FlatGallery');
    module_load_include('inc', 'flat_gallery', 'includes/FlatGallerySolr');

    drupal_add_js(drupal_get_path('module', 'flat_gallery') . '/js/flat-gallery-app.js');
    drupal_add_css(drupal_get_path('module', 'flat_gallery') . '/css/flat-gallery-app.css');

    $solr    = new FlatGallerySolr();
    $gallery = new FlatGallery($object, $solr, $id);

    $items   = $gallery->getItems();
    $current = $gallery->getCurrentItem();

    if (false === $current) {

        return theme('flat_gallery_out_of_bounds', [
            'url' => url('islandora/object/' . $object->id . '/ig'),
        ]);
    }

    drupal_add_js([

        'flat_gallery' => [

            'url'           => url('islandora/object/' . $object->id . '/ig/ajax'),
            'images'        => $items,
            'openseadragon' => flat_gallery_setup_openseadragon($current)['settings'],
        ],

    ], 'setting');

    return theme('flat_gallery_overview', [

        'islandora_object' => $object,
        'items'            => $items,
        'current'          => $current,
        'navigationLinks'  => $gallery->getNavigationLinks(),
        'paginationLinks'  => $gallery->getPaginationLinks(),
    ]);
}

function flat_gallery_setup_openseadragon($image) {

    if ($image['viewer_type'] !== 'large') {
        return null;
    }

    module_load_include('inc', 'islandora_openseadragon', 'theme/theme');
    module_load_include('inc', 'islandora_openseadragon', 'includes/utilities');

    $params = [

        'token' => islandora_get_object_token($image['object']->id, 'JP2', 2),
        'pid'   => $image['object']->id,
        'dsid'  => 'JP2',
    ];

    $token_header = variable_get('islandora_openseadragon_tilesource', 'djatoka') == 'iiif'
      && variable_get('islandora_openseadragon_iiif_token_header', FALSE);

    $openseadragon = [
        'pid' => $params['pid'],
        'tile_sources' => islandora_openseadragon_tile_source($params['pid'], $params['dsid'], $params['token']),
        'token' => $params['token'],
        'token_header' => $token_header,
    ];


    template_preprocess_islandora_openseadragon_viewer($openseadragon);

    $openseadragon['id'] = $openseadragon['id'] . '-new';
    $openseadragon['settings']['options']['id'] = $openseadragon['id'];

    template_process_islandora_openseadragon_viewer($openseadragon);

    return $openseadragon;

    // islandora_openseadragon_callback($params, $image['object']);

    // module_load_include('inc', 'islandora_openseadragon', 'includes/utilities');

    // $object       = $image['object'];
    // $library_path = libraries_get_path('openseadragon');
    // $id           = 'islandora-openseadragon';
    // $token        = islandora_get_object_token($object->id, 'JP2', 2);
    // $tile_sources = islandora_openseadragon_tile_source($object->id, 'JP2', $token);
    // $token_header = variable_get('islandora_openseadragon_tilesource', 'djatoka') == 'iiif'
    //                 && variable_get('islandora_openseadragon_iiif_token_header', false);

    // $openseadragon = [

    //     'pid'                  => $object->id,
    //     'imageServer'          => variable_get('islandora_openseadragon_tilesource', 'djatoka'),
    //     'djatokaServerBaseURL' => url(variable_get('islandora_openseadragon_djatoka_url', 'adore-djatoka/resolver'), ['absolute' => true]),
    //     'iiifServerBaseURL'    => url(variable_get('islandora_openseadragon_iiif_url', 'iiif')),
    //     'fitToAspectRatio'     => variable_get('islandora_openseadragon_fit_to_aspect_ratio', false),
    //     'options'              => [
    //         'id'          => $id,
    //         'prefixUrl'   => file_create_url("{$library_path}/images/"),
    //         'tileSources' => $tile_sources,
    //         'overlays'    => islandora_openseadragon_viewer_query_solr_for_overlays($object->id),
    //     ] + islandora_openseadragon_get_settings(),
    // ];

    // if ($token_header) {

    //     $openseadragon['options']['loadTilesWithAjax'] = true;
    //     $openseadragon['options']['ajaxHeaders'] = [
    //         'X-ISLANDORA-TOKEN' => $token,
    //     ];
    // }

    return $openseadragon;
}

function flat_gallery_fetch_large_image_ajax($object, $ig, $ajax, $id) {

    module_load_include('inc', 'flat_gallery', 'includes/FlatGallery');
    module_load_include('inc', 'flat_gallery', 'includes/FlatGallerySolr');

    $solr    = new FlatGallerySolr();
    $gallery = new FlatGallery($object, $solr, $id);
    $current = $gallery->getCurrentItem();

    if (false === $current) {
        return false;
    }

    $data = flat_gallery_setup_openseadragon($current);

    return $data['settings'];
}

/**
 * Ajax callback method
 *
 * @param string $page_callback_result
 *
 * @return void
 */
function flat_gallery_open_gallery_ajax($page_callback_result) {

    // Add CSS and JS files, add some markup
    $html = '<html><head><title></title>' . drupal_get_css() . drupal_get_js() . '</head><body>' . $page_callback_result . '</body></html>';
    print $html;

    // Perform end-of-request tasks.
    drupal_page_footer();
}

/**
 * Preprocessor to add link to gallery at the top of the block
 *
 * @param array $variables
 *
 * @return void
 */
function flat_gallery_preprocess_block(&$variables) {

    if (isset($variables['block_html_id']) && $variables['block_html_id'] === 'block-islandora-compound-object-compound-navigation') {

        module_load_include('inc', 'flat_gallery', 'includes/FlatGallerySolr');

        $pid     = urldecode(arg(2));
        $solr    = new FlatGallerySolr();
        $results = $solr->getItems($pid);

        if ($results['total'] > 0) {

            drupal_add_js(drupal_get_path('module', 'flat_gallery') . '/js/flat-gallery-app.js');
            drupal_add_css(drupal_get_path('module', 'flat_gallery') . '/css/flat-gallery-app.css');

            $content              = theme('flat_gallery_modal', ['url' => url('islandora/object/' . $pid . '/ig')]);
            $variables['content'] = $content . $variables['content'];
        }
    }
}

/**
 * FLAT Gallery Menu
 *
 * @return array
 */
function flat_gallery_menu() {

    $items = [];

    $items['islandora/object/%islandora_object/ig'] = [

        'title'             => 'FLAT Gallery',
        'type'              => MENU_CALLBACK,
        'page callback'     => 'flat_gallery',
        'page arguments'    => [2],
        'access callback'   => 'flat_gallery_menu_access',
        'delivery callback' => 'flat_gallery_open_gallery_ajax',
    ];

    $items['islandora/object/%islandora_object/ig/li/%'] = [

        'title'             => 'FLAT Gallery',
        'type'              => MENU_CALLBACK,
        'page callback'     => 'flat_gallery',
        'page arguments'    => [],
    ];

    $items['islandora/object/%islandora_object/ig/ajax/%'] = [

        'title'             => 'FLAT Gallery',
        'type'              => MENU_CALLBACK,
        'page callback'     => 'flat_gallery_fetch_large_image_ajax',
        'page arguments'    => [2, 3, 4, 5],
        'access callback'   => 'flat_gallery_menu_access',
        'delivery callback' => 'drupal_json_output',
    ];

    $items['admin/config/flat_deposit/flat_gallery'] = [

        'title'           => 'Configure FLAT gallery',
        'type'            => MENU_LOCAL_TASK,
        'page callback'   => 'drupal_get_form',
        'page arguments'  => ['flat_gallery_admin_form'],
        'access callback' => 'flat_gallery_menu_access',
        'file'            => 'includes/FlatGalleryAdmin.inc',
    ];

    return $items;
}

/**
 * Always allow FLAT gallery menu access
 *
 * @return boolean
 */
function flat_gallery_menu_access() {
    return true;
}

/**
 * hook_theme implementation
 *
 * @param array  $existing
 * @param string $type
 * @param string $theme
 * @param string $path
 *
 * @return array
 */
function flat_gallery_theme($existing, $type, $theme, $path) {

    return [

        'flat_gallery_overview' => [
            'template' => 'theme/flat-gallery-overview',
        ],

        'flat_gallery_modal' => [
            'template' => 'theme/flat-gallery-modal',
        ],

        'flat_gallery_out_of_bounds' => [
            'template' => 'theme/flat-gallery-out-of-bounds',
        ],
    ];
}
