<?php
define('FLAT_GALLERY_DEFAULT_PAGINATION_LIMIT', 10);
module_load_include('inc', 'islandora', 'includes/authtokens');
module_load_include('inc', 'islandora', 'includes/solution_packs');
/**
 * FLAT gallery
 *
 * @param AbstractObject $object
 * @param string|null    $id
 *
 * @return string
 */
function flat_gallery($object, $id = null) {

    module_load_include('inc', 'flat_gallery', 'includes/FlatGallery');
    module_load_include('inc', 'flat_gallery', 'includes/FlatGallerySolr');

    drupal_add_js(drupal_get_path('module', 'flat_gallery') . '/js/flat-gallery-app.js');
    drupal_add_css(drupal_get_path('module', 'flat_gallery') . '/css/flat-gallery-app.css');

    $solr    = new FlatGallerySolr();
    $gallery = new FlatGallery($object, $solr, $id);

    $items   = $gallery->getItems();
    $current = $gallery->getCurrentItem();

    if (false === $current) {

        return theme('flat_gallery_out_of_bounds', [
            'url' => url('islandora/object/' . $object->id . '/ig'),
        ]);
    }

    flat_gallery_prepare_settings_js($object, $items, $current);

    return theme('flat_gallery_overview', [

        'islandora_object' => $object,
        'items'            => $items,
        'current'          => $current,
        'navigationLinks'  => $gallery->getNavigationLinks(),
        'paginationLinks'  => $gallery->getPaginationLinks(),
    ]);
}

/**
 * Setting up json that is going be sent to JS
 *
 * @param AbstractObject $object
 * @param array          $items
 * @param array          $current_image
 *
 * @return array
 */
function flat_gallery_prepare_settings_js($object, $items, $current_image) {

    drupal_add_js([

        'flat_gallery' => [

            'current_id'    => $current_image['id'],
            'images'        => $items,
            'openseadragon' => flat_gallery_setup_openseadragon($current_image),
            'fedora'        => [

                'pid'      => $object->id,
                'label'    => $object->label,
                'base_url' => url('islandora/object/' . $object->id . '/ig'),
            ],
        ],
    ], 'setting');
}

/**
 * Setting up openseadragon to allow for
 * ajax fetching of this data
 *
 * @param array $image
 * @return array
 */
function flat_gallery_setup_openseadragon($image) {

    module_load_include('inc', 'islandora_openseadragon', 'theme/theme');
    module_load_include('inc', 'islandora_openseadragon', 'includes/utilities');

    if ($image['viewer_type'] !== 'large') {

        $openseadragon = [
            'settings' => [
                'options' => [
                    'id' => 'islandora-openseadragon-new',
                ],
            ],
        ];

        template_process_islandora_openseadragon_viewer($openseadragon);

        return $openseadragon['settings'];
    }

    $params = [

        'token' => islandora_get_object_token($image['object']->id, 'JP2', 2),
        'pid'   => $image['object']->id,
        'dsid'  => 'JP2',
    ];

    $params['jp2_url'] = url('islandora/object/' . $params['pid'] . '/datastream/JP2/view', [

        'absolute' => true,
        'query'    => [
            'token' => $params['token']
        ],
    ]);

    $openseadragon = [

        'pid'          => $params['pid'],
        'tile_sources' => islandora_openseadragon_identifier_tile_source($params['jp2_url']),
    ];

    template_preprocess_islandora_openseadragon_viewer($openseadragon);

    $openseadragon['id'] = $openseadragon['id'] . '-new';
    $openseadragon['settings']['options']['id'] = $openseadragon['id'];

    template_process_islandora_openseadragon_viewer($openseadragon);

    return $openseadragon['settings'];
}

/**
 * Fetching large image data via ajax
 *
 * @param AbstractObject $object
 * @param string $ig
 * @param string $ajax
 * @param int $id
 * @return array|false
 */
function flat_gallery_fetch_large_image_ajax($object, $ig, $ajax, $id) {

    module_load_include('inc', 'flat_gallery', 'includes/FlatGallery');
    module_load_include('inc', 'flat_gallery', 'includes/FlatGallerySolr');

    $solr    = new FlatGallerySolr();
    $gallery = new FlatGallery($object, $solr, $id);
    $current = $gallery->getCurrentItem();

    if (false === $current) {
        return false;
    }

    return flat_gallery_setup_openseadragon($current);
}

/**
 * Ajax callback method
 *
 * @param string $page_callback_result
 *
 * @return void
 */
function flat_gallery_open_gallery_ajax($page_callback_result) {

    // Add CSS and JS files, add some markup
    $html = '<html><head><title></title>' . drupal_get_css() . drupal_get_js() . '</head><body>' . $page_callback_result . '</body></html>';
    print $html;

    // Perform end-of-request tasks.
    drupal_page_footer();
}

/**
 * Preprocessor to add link to gallery at the top of the block
 *
 * @param array $variables
 *
 * @return void
 */
function flat_gallery_preprocess_block(&$variables) {

    if (isset($variables['block_html_id']) && $variables['block_html_id'] === 'block-islandora-compound-object-compound-navigation') {

        module_load_include('inc', 'flat_gallery', 'includes/FlatGallerySolr');

        $pid     = urldecode(arg(2));
        $solr    = new FlatGallerySolr();
        $results = $solr->getItems($pid);

        if ($results['total'] > 0) {

            drupal_add_js(drupal_get_path('module', 'flat_gallery') . '/js/flat-gallery-app.js');
            drupal_add_css(drupal_get_path('module', 'flat_gallery') . '/css/flat-gallery-app.css');

            drupal_add_js([

                'flat_gallery' => [

                    'modal' => true,
                    'url'   => url('islandora/object/' . $pid . '/ig'),
                ],

            ], 'setting');

            $content              = theme('flat_gallery_modal');
            $variables['content'] = $content . $variables['content'];
        }
    }
}

/**
 * FLAT Gallery Menu
 *
 * @return array
 */
function flat_gallery_menu() {

    $items = [];

    $items['islandora/object/%islandora_object/ig'] = [

        'title'             => 'FLAT Gallery',
        'type'              => MENU_CALLBACK,
        'page callback'     => 'flat_gallery',
        'page arguments'    => [2],
        'access callback'   => 'flat_gallery_menu_access',
        'delivery callback' => 'flat_gallery_open_gallery_ajax',
    ];

    $items['islandora/object/%islandora_object/ig/li/%'] = [

        'title'             => 'FLAT Gallery',
        'type'              => MENU_CALLBACK,
        'page callback'     => 'flat_gallery',
        'page arguments'    => [],
    ];

    $items['islandora/object/%islandora_object/ig/ajax/%'] = [

        'title'             => 'FLAT Gallery',
        'type'              => MENU_CALLBACK,
        'page callback'     => 'flat_gallery_fetch_large_image_ajax',
        'page arguments'    => [2, 3, 4, 5],
        'access callback'   => 'flat_gallery_menu_access',
        'delivery callback' => 'drupal_json_output',
    ];

    $items['admin/config/flat_deposit/flat_gallery'] = [

        'title'           => 'Configure FLAT gallery',
        'type'            => MENU_LOCAL_TASK,
        'page callback'   => 'drupal_get_form',
        'page arguments'  => ['flat_gallery_admin_form'],
        'access callback' => 'flat_gallery_menu_access',
        'file'            => 'includes/FlatGalleryAdmin.inc',
    ];

    return $items;
}

/**
 * Always allow FLAT gallery menu access
 *
 * @return boolean
 */
function flat_gallery_menu_access() {
    return true;
}

/**
 * hook_theme implementation
 *
 * @param array  $existing
 * @param string $type
 * @param string $theme
 * @param string $path
 *
 * @return array
 */
function flat_gallery_theme($existing, $type, $theme, $path) {

    return [

        'flat_gallery_overview' => [
            'template' => 'theme/flat-gallery-overview',
        ],

        'flat_gallery_modal' => [
            'template' => 'theme/flat-gallery-modal',
        ],

        'flat_gallery_out_of_bounds' => [
            'template' => 'theme/flat-gallery-out-of-bounds',
        ],
    ];
}
